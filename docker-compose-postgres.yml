version: "3.8"

networks:
  laravel:

services:
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: unless-stopped
    container_name: nginx
    ports:
      - 8000:8000
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - php
      - redis
      - postgresql
      - laravel-queue
      - laravel-cron
      - pgadmin
      - mailhog
    networks:
      - laravel

  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: php
    ports:
      - "9000"
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6380:6379
    networks:
      - laravel

  laravel-cron:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-cron
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - postgresql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan", "schedule:work"]
    networks:
      - laravel

  laravel-queue:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-queue
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - postgresql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan", "queue:work"]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    logging:
      driver: "none"
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel

  laravel-migrate-seed:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-migrate-seed
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - postgresql
    profiles: ["migrate-seed"]
    working_dir: /var/www/html
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        php artisan migrate
        php artisan db:seed
    networks:
      - laravel

  composer:
    build:
      context: ./docker
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: composer
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-laravel} #system user
    profiles: ["composer"]
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  artisan:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: artisan
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - postgresql
    working_dir: /var/www/html
    profiles: ["artisan"]
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

  npm:
    image: node:alpine
    container_name: npm
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    profiles: ["npm"]
    entrypoint: ["npm"]
    networks:
      - laravel

  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/postgresql:/var/lib/postgresql/data
    networks:
      - laravel

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_USERNAME}@${DB_EMAIL_HOST}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgresql
    networks:
      - laravel
